//@ts-check
import { test, expect } from '@playwright/test';
import { faker } from '@faker-js/faker';


test.beforeEach(async ({ page }) => {
  await page.goto('https://www.guvi.in/');
  await page.getByRole('link', { name: 'Courses', exact: true }).click();
  await expect(page, 'Page URL should end with "/courses/"').toHaveURL(/.*courses\//);
  await page.locator('a[role="tab"][id="home-tab"]').click();
});

test.describe.serial('Testing the Home Page', () => {

  const course_to_buy = 'Step into Robotic Process Automation';
  const PASSWORD = 'Acehardware@123';

  // This is a test function that checks the number of courses in the course library tab
  test('Check how many courses are there in the course library tab', async ({ page }) => {
    // Locate all the course links in the course library tab
    const library_courses = await page.locator('#atomicLib a').all();
    // Assert that the number of courses is equal to 16
    expect(library_courses.length, 'Course counts should be 1  6').toBe(16);
    // Loop through each course link
    for (let library_course of library_courses) {
      // Get the course title
      const title = await library_course.locator('h3').textContent();
      // Get the course language
      const lang = await library_course.locator('p.language').textContent();
      // Print the course title and language to the console
      console.log(`Course Title : ${title}, Language : ${lang}`);
    };
  });

  // This is a test function that checks if the '${course_to_buy}' course can be enrolled successfully.
  test(`Enrolling ‘${course_to_buy}’ course`, async ({ page }) => {

    // Search for the course by typing its name in the search box and press enter.
    await page.getByPlaceholder('Search', { exact: true }).pressSequentially(course_to_buy);
    await page.getByPlaceholder('Search', { exact: true }).press('Enter');

    // Verify that the searched course is displayed in the list of courses.
    await expect(page.locator('h3.course-title'), `Listed course should contain title ${course_to_buy}`).toContainText(course_to_buy);

    // Click on the course title to go to its detail page.
    await page.locator('h3.course-title').click();

    // Fill out the enrollment form with the following information:
    // - userEmail: a random email generated by faker.internet.email()
    // - userMobile: a random phone number generated by faker.phone.number() with all non-numeric characters removed
    // - password: the value of the global variable PASSWORD
    // - userName: a random full name generated by faker.person.fullName()
    // - confirmPassword: the same value as password
    await page.locator('#userEmail').fill(faker.internet.email());
    await page.locator('#userMobile').fill(faker.phone.number().replace(/\D/gm, ''));
    await page.locator('#password').fill(PASSWORD);
    await page.locator('#userName').fill(faker.person.fullName());
    await page.locator('#confirmPassword').fill(PASSWORD);

    // Select the 'bundlePayment' option for payment.
    await page.locator("id=bundlePayment").click();

    // Verify that a success message is displayed after enrollment.
    await expect(page.getByRole('heading', { name: 'A verification link has been' })).toBeVisible();
    await expect(page.locator('section')).toContainText('A verification link has been sent to the given email ID. Please verify your account through that link and start learning for FREE!');
    await expect(page.locator('h1')).toContainText('Almost Done! One more step to go!');
    await expect(page.locator('section')).toContainText('Step into Robotic Process Automation');
  });

});